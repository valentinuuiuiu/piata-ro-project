version: '3.8'

services:
  # Database service with PostgreSQL
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: piata_ro
      POSTGRES_USER: piata_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-piata_password}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U piata_user -d piata_ro"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis service for caching and Celery
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped

  # Celery worker for background tasks
  celery:
    build: .
    command: celery -A piata_ro worker --loglevel=info
    environment:
      - DJANGO_SETTINGS_MODULE=piata_ro.settings
      - DEBUG=False
      - DATABASE_URL=postgresql://piata_user:piata_password@db:5432/piata_ro
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./media:/app/media
      - ./logs:/app/logs
    restart: unless-stopped

  # Celery beat for scheduled tasks
  celery-beat:
    build: .
    command: celery -A piata_ro beat --loglevel=info
    environment:
      - DJANGO_SETTINGS_MODULE=piata_ro.settings
      - DEBUG=False
      - DATABASE_URL=postgresql://piata_user:piata_password@db:5432/piata_ro
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./media:/app/media
      - ./logs:/app/logs
    restart: unless-stopped

  # Main web application
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=piata_ro.settings
      - DEBUG=${DEBUG:-False}
      - DATABASE_URL=postgresql://piata_user:piata_password@db:5432/piata_ro
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./staticfiles:/app/staticfiles:ro
      - ./media:/app/media:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    restart: unless-stopped

  # MCP agents service
  mcp-agents:
    build: .
    command: python archive/mcp-servers-20250630/simple_http_agents.py
    ports:
      - "8001:8001"
      - "8002:8002" 
      - "8003:8003"
    environment:
      - DJANGO_SETTINGS_MODULE=piata_ro.settings
      - DEBUG=False
      - DATABASE_URL=postgresql://piata_user:piata_password@db:5432/piata_ro
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
